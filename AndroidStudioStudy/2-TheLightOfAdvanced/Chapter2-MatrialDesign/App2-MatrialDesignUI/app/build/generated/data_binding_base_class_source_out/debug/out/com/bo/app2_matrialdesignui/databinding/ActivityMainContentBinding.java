// Generated by view binder compiler. Do not edit!
package com.bo.app2_matrialdesignui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.bo.app2_matrialdesignui.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainContentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout clRoot;

  @NonNull
  public final AppBarLayout mainAppbar;

  @NonNull
  public final CollapsingToolbarLayout mainCollapsingToolbarL;

  @NonNull
  public final TabLayout mainTabs;

  @NonNull
  public final Toolbar mainToolbar;

  @NonNull
  public final ViewPager mainVp;

  private ActivityMainContentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout clRoot, @NonNull AppBarLayout mainAppbar,
      @NonNull CollapsingToolbarLayout mainCollapsingToolbarL, @NonNull TabLayout mainTabs,
      @NonNull Toolbar mainToolbar, @NonNull ViewPager mainVp) {
    this.rootView = rootView;
    this.clRoot = clRoot;
    this.mainAppbar = mainAppbar;
    this.mainCollapsingToolbarL = mainCollapsingToolbarL;
    this.mainTabs = mainTabs;
    this.mainToolbar = mainToolbar;
    this.mainVp = mainVp;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout clRoot = (CoordinatorLayout) rootView;

      id = R.id.main_appbar;
      AppBarLayout mainAppbar = rootView.findViewById(id);
      if (mainAppbar == null) {
        break missingId;
      }

      id = R.id.main_collapsing_toolbar_l;
      CollapsingToolbarLayout mainCollapsingToolbarL = rootView.findViewById(id);
      if (mainCollapsingToolbarL == null) {
        break missingId;
      }

      id = R.id.main_tabs;
      TabLayout mainTabs = rootView.findViewById(id);
      if (mainTabs == null) {
        break missingId;
      }

      id = R.id.main_toolbar;
      Toolbar mainToolbar = rootView.findViewById(id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.main_vp;
      ViewPager mainVp = rootView.findViewById(id);
      if (mainVp == null) {
        break missingId;
      }

      return new ActivityMainContentBinding((CoordinatorLayout) rootView, clRoot, mainAppbar,
          mainCollapsingToolbarL, mainTabs, mainToolbar, mainVp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
