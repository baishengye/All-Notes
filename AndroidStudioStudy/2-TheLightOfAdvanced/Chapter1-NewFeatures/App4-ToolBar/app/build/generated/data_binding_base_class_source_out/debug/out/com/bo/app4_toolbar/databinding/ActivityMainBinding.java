// Generated by view binder compiler. Do not edit!
package com.bo.app4_toolbar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import com.bo.app4_toolbar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final DrawerLayout dl;

  @NonNull
  public final LinearLayout llContent;

  @NonNull
  public final LinearLayout llTabs;

  @NonNull
  public final MyToolbarBinding mtb;

  @NonNull
  public final TextView tcClose;

  @NonNull
  public final TextView tvContent;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull DrawerLayout dl,
      @NonNull LinearLayout llContent, @NonNull LinearLayout llTabs, @NonNull MyToolbarBinding mtb,
      @NonNull TextView tcClose, @NonNull TextView tvContent) {
    this.rootView = rootView;
    this.dl = dl;
    this.llContent = llContent;
    this.llTabs = llTabs;
    this.mtb = mtb;
    this.tcClose = tcClose;
    this.tvContent = tvContent;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dl;
      DrawerLayout dl = rootView.findViewById(id);
      if (dl == null) {
        break missingId;
      }

      id = R.id.ll_content;
      LinearLayout llContent = rootView.findViewById(id);
      if (llContent == null) {
        break missingId;
      }

      id = R.id.ll_tabs;
      LinearLayout llTabs = rootView.findViewById(id);
      if (llTabs == null) {
        break missingId;
      }

      id = R.id.mtb;
      View mtb = rootView.findViewById(id);
      if (mtb == null) {
        break missingId;
      }
      MyToolbarBinding binding_mtb = MyToolbarBinding.bind(mtb);

      id = R.id.tc_close;
      TextView tcClose = rootView.findViewById(id);
      if (tcClose == null) {
        break missingId;
      }

      id = R.id.tv_content;
      TextView tvContent = rootView.findViewById(id);
      if (tvContent == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, dl, llContent, llTabs, binding_mtb,
          tcClose, tvContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
