// Generated by view binder compiler. Do not edit!
package com.bo.a1_counter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bo.a1_counter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addDataBtn;

  @NonNull
  public final Button clearBtn;

  @NonNull
  public final Button counterBtn;

  @NonNull
  public final Button deleteData;

  @NonNull
  public final Button doWorkBtn;

  @NonNull
  public final Button getDataBtn;

  @NonNull
  public final Button getUser;

  @NonNull
  public final TextView infoText;

  @NonNull
  public final Button updateData;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button addDataBtn,
      @NonNull Button clearBtn, @NonNull Button counterBtn, @NonNull Button deleteData,
      @NonNull Button doWorkBtn, @NonNull Button getDataBtn, @NonNull Button getUser,
      @NonNull TextView infoText, @NonNull Button updateData) {
    this.rootView = rootView;
    this.addDataBtn = addDataBtn;
    this.clearBtn = clearBtn;
    this.counterBtn = counterBtn;
    this.deleteData = deleteData;
    this.doWorkBtn = doWorkBtn;
    this.getDataBtn = getDataBtn;
    this.getUser = getUser;
    this.infoText = infoText;
    this.updateData = updateData;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addDataBtn;
      Button addDataBtn = ViewBindings.findChildViewById(rootView, id);
      if (addDataBtn == null) {
        break missingId;
      }

      id = R.id.clearBtn;
      Button clearBtn = ViewBindings.findChildViewById(rootView, id);
      if (clearBtn == null) {
        break missingId;
      }

      id = R.id.counterBtn;
      Button counterBtn = ViewBindings.findChildViewById(rootView, id);
      if (counterBtn == null) {
        break missingId;
      }

      id = R.id.deleteData;
      Button deleteData = ViewBindings.findChildViewById(rootView, id);
      if (deleteData == null) {
        break missingId;
      }

      id = R.id.doWorkBtn;
      Button doWorkBtn = ViewBindings.findChildViewById(rootView, id);
      if (doWorkBtn == null) {
        break missingId;
      }

      id = R.id.getDataBtn;
      Button getDataBtn = ViewBindings.findChildViewById(rootView, id);
      if (getDataBtn == null) {
        break missingId;
      }

      id = R.id.getUser;
      Button getUser = ViewBindings.findChildViewById(rootView, id);
      if (getUser == null) {
        break missingId;
      }

      id = R.id.infoText;
      TextView infoText = ViewBindings.findChildViewById(rootView, id);
      if (infoText == null) {
        break missingId;
      }

      id = R.id.updateData;
      Button updateData = ViewBindings.findChildViewById(rootView, id);
      if (updateData == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, addDataBtn, clearBtn, counterBtn,
          deleteData, doWorkBtn, getDataBtn, getUser, infoText, updateData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
