// Generated by view binder compiler. Do not edit!
package com.bo.a1_material.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bo.a1_material.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFruitBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final FloatingActionButton floatingBtn;

  @NonNull
  public final TextView fruitContentText;

  @NonNull
  public final ImageView fruitImageView;

  @NonNull
  public final Toolbar toolbar;

  private ActivityFruitBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull CollapsingToolbarLayout collapsingToolbar, @NonNull FloatingActionButton floatingBtn,
      @NonNull TextView fruitContentText, @NonNull ImageView fruitImageView,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.collapsingToolbar = collapsingToolbar;
    this.floatingBtn = floatingBtn;
    this.fruitContentText = fruitContentText;
    this.fruitImageView = fruitImageView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFruitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFruitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_fruit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFruitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.collapsingToolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.floatingBtn;
      FloatingActionButton floatingBtn = ViewBindings.findChildViewById(rootView, id);
      if (floatingBtn == null) {
        break missingId;
      }

      id = R.id.fruitContentText;
      TextView fruitContentText = ViewBindings.findChildViewById(rootView, id);
      if (fruitContentText == null) {
        break missingId;
      }

      id = R.id.fruitImageView;
      ImageView fruitImageView = ViewBindings.findChildViewById(rootView, id);
      if (fruitImageView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityFruitBinding((CoordinatorLayout) rootView, appBar, collapsingToolbar,
          floatingBtn, fruitContentText, fruitImageView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
